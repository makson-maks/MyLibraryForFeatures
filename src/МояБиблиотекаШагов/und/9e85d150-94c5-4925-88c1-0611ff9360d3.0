{3,
{49,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},0,"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{11,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//пример вызова Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		""ЯУдаляюВсеЭлементыДокумента(Парам01)"",
		""ЯУдаляюВсеЭлементыДокумента"",
		""И я удаляю все элементы Документа """"ПриходДенежныхСредств"""""",
		"""",
		"""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,
		""ЯОчищаюЗначениеКонстанты(Парам01)"",
		""ЯОчищаюЗначениеКонстанты"",
		""И я очищаю значение константы """"ПоследняяДатаРасчетаФактическогоОстаткаЛимита"""""",
		"""",
		"""");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯУстанавливаюПараметрСеансаВЗначениеТипаБулево(Парам01,Парам02)"",""ЯУстанавливаюПараметрСеансаВЗначениеТипаБулево"",""И Я устанавливаю параметр сеанса """"РежимТестирования"""" в значение типа булево """"Истина"""""","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯУстанавливаюПараметрСеансаВЗначениеТипаДата(Парам01,Парам02)"",""ЯУстанавливаюПараметрСеансаВЗначениеТипаДата"",""И Я устанавливаю параметр сеанса """"ДатаТестирования"""" в значение типа дата """"20190311000000"""""","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯУстанавливаюЗначениеКонстантыВЗначение(Парам01,Парам02)"",""ЯУстанавливаюЗначениеКонстантыВЗначение"",""И Я устанавливаю значение константы """"РежимТестирования"""" в значение """"Истина"""""","""","""");
	
	Возврат ВсеТесты;
	
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти

#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И я удаляю все элементы Документа ""ПриходДенежныхСредств""
//@ЯУдаляюВсеЭлементыДокумента(Парам01)
Процедура ЯУдаляюВсеЭлементыДокумента(ВидДокумента) Экспорт
	ЯУдаляюВсеЭлементыДокументаСервер(ВидДокумента);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЯУдаляюВсеЭлементыДокументаСервер(ВидДокумента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		""ВЫБРАТЬ
		|	Документ1.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Документ1 КАК Документ1"";

	Запрос.Текст = СтрЗаменить(Запрос.Текст, ""Документ1"", ВидДокумента);	
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Попытка
			ДокОбъект.Удалить();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
//И я очищаю значение константы ""ПоследняяДатаРасчетаФактическогоОстаткаЛимита""
//@ЯОчищаюЗначениеКонстанты(Парам01)
Процедура ЯОчищаюЗначениеКонстанты(ИмяКонстанты) Экспорт
	ЯОчищаюЗначениеКонстантыСервер(ИмяКонстанты);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЯОчищаюЗначениеКонстантыСервер(ИмяКонстанты)
	
	Константы.ПоследняяДатаРасчетаФактическогоОстаткаЛимита.Установить(Неопределено);
	
КонецПроцедуры


&НаКлиенте
//И Я устанавливаю параметр сеанса ""РежимТестирования"" в значение типа булево ""Истина""
//@ЯУстанавливаюПараметрСеансаВЗначениеТипаБулево(Парам01,Парам02)
Процедура ЯУстанавливаюПараметрСеансаВЗначениеТипаБулево(ИмяПараметраСеанса, ЗначениеПараметраСеанса) Экспорт
	ЯУстанавливаюПараметрСеансаВЗначениеТипаБулевоСервер(ИмяПараметраСеанса, ЗначениеПараметраСеанса)
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЯУстанавливаюПараметрСеансаВЗначениеТипаБулевоСервер(ИмяПараметраСеанса, ЗначениеПараметраСеанса)
	
	Если НРег(ЗначениеПараметраСеанса) = ""истина"" Тогда
		ПараметрыСеанса[ИмяПараметраСеанса] = Истина;
	Иначе
		ПараметрыСеанса[ИмяПараметраСеанса] = Ложь;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
//И Я устанавливаю параметр сеанса ""ДатаТестирования"" в значение типа дата ""20190311000000""
//@ЯУстанавливаюПараметрСеансаВЗначениеТипаДата(Парам01,Парам02)
Процедура ЯУстанавливаюПараметрСеансаВЗначениеТипаДата(ИмяПараметраСеанса, ЗначениеПараметраСеанса) Экспорт
	ЯУстанавливаюПараметрСеансаВЗначениеТипаДатаСервер(ИмяПараметраСеанса, ЗначениеПараметраСеанса)
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЯУстанавливаюПараметрСеансаВЗначениеТипаДатаСервер(ИмяПараметраСеанса, ЗначениеПараметраСеанса)
	ПараметрыСеанса[ИмяПараметраСеанса] = Дата(ЗначениеПараметраСеанса);
КонецПроцедуры


//И Я устанавливаю значение константы ""РежимТестирования"" в значение ""Истина""
//@ЯУстанавливаюЗначениеКонстантыВЗначение(Парам01,Парам02)
Процедура ЯУстанавливаюЗначениеКонстантыВЗначение(ИмяКонстанты, ЗначениеКонстанты) Экспорт
	ЯУстанавливаюЗначениеКонстантыВЗначениеСервер(ИмяКонстанты, ЗначениеКонстанты);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЯУстанавливаюЗначениеКонстантыВЗначениеСервер(ИмяКонстанты, ЗначениеКонстанты)
	
	Если НРег(ЗначениеКонстанты) = ""истина"" Тогда
		ЗначениеКонстанты = Истина;
	ИначеЕсли НРег(ЗначениеКонстанты) = ""ложь"" Тогда
		ЗначениеКонстанты = Ложь;
	КонецЕсли;
	
	Константы[ИмяКонстанты].Установить(ЗначениеКонстанты);
	
КонецПроцедуры",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",503de865-4645-4496-b5dd-2e4a76236095}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}